@startuml
actor User
participant App
participant API
participant "DBagent"
database "VectorDB" as DB
participant Transformer
participant Report

autonumber
title Report Generation Process

User -> App: select(ticker, daterange)
App -> Report **: create
App -> API: find(ticker,daterange)
API -> API: parse(annual report)
API --> App: return parsed
App -> DBagent: call_embed(parsed)

loop#lightblue #lightblue Foreach Annual Report
    DBagent -> DBagent: tokenize(parsed)
    DBagent -> DB: upsert(tokenized)
    DB --> DBagent: Confirm
end

DBagent --> App: Confirm
loop#lightyellow #lightyellow Foreach section in report
    App -> Transformer: call_transform(prompt)
    Transformer -> DBagent: get_context()
    DBagent -> DB: query()
    DB --> DBagent: return data
    DBagent -> DBagent: detokenize(data)
    DBagent -> DBagent: create_context(data, stored_preprompt)
    DBagent --> Transformer: return(context, prompt)
    Transformer -> Transformer: transform(context, prompt)
    Transformer --> App: return(output)
    App -> Report: write(output)
    Report --> App: Confirm
end

App --> User: Confirm

@enduml